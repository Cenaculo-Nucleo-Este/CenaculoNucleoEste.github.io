---
import { Image } from 'astro:assets';
import type { EpMember } from "~/types";

interface Props {
  member: EpMember;
  gradientClass: string;
}

const { member, gradientClass } = Astro.props;
---

<div class="group relative w-full max-w-[300px] mb-10">
  <div class={`relative overflow-hidden rounded-md aspect-[5/6] bg-gradient-to-br ${gradientClass}`}>
    {typeof member.image === 'string' ? (
      <img
        src={member.image}
        alt={member.name}
        class="w-full h-full object-cover"
      />
    ) : (
      <Image
        src={member.image}
        alt={member.name}
        class="w-full h-full object-cover"
      />
    )}
  </div>
  <div class="bg-white rounded-2xl p-3 mt-[-2rem] absolute left-0 right-0 mx-auto w-[80%] text-center shadow-md name-container">
    <h2 class=" text-4xl font-bold text-gray-900 mb-1 name-text">
      {member.name}
    </h2>
    <p class="text-xs text-gray-500 mb-1 truncate">
      {member.agrupamento}
    </p>
  </div>
</div>

<style>
  .group:hover img {
    transform: scale(1.05);
    transition: transform 0.3s ease-in-out;
  }

  img {
    transition: transform 0.3s ease-in-out;
  }
  
  .name-container {
    max-width: 100%;
  }
  
  .name-text {
    display: block;
    text-overflow: ellipsis;
    overflow: hidden;
    max-width: 100%;
    white-space: nowrap;
    font-size: 0.875rem;
  }
  
  /* Responsive font sizing for long names */
  .name-text:not(.truncated) {
    font-size: clamp(0.7rem, 4vw, 0.875rem);
  }
</style>