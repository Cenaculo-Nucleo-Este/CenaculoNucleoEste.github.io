---
import Icon from "./Icon.astro";
import type { Cla } from "~/types";

export interface Props extends Cla {}

const {
  name,
  agrupamento,
  description,
  image,
  instagram,
  facebook,
  email,
  coordinates
} = Astro.props;

function convertGoogleDriveUrl(url: string | null): string {
  if (!url) return getRandomSymbolImage();
  
  let fileId = '';
  
  if (!url.startsWith('http')) {
    fileId = url;
  }
  else if (url.includes('drive.google.com') && url.includes('drive-viewer/')) {
    const match = url.match(/drive-viewer\/([A-Za-z0-9_-]+)/);
    if (match && match[1]) {
      fileId = match[1];
    }
  }
  else if (url.includes('drive.google.com') && url.includes('/file/d/')) {
    const match = url.match(/\/file\/d\/([A-Za-z0-9_-]+)/);
    if (match && match[1]) {
      fileId = match[1];
    }
  }
  
  if (fileId) {
    return `https://drive.google.com/thumbnail?id=${fileId}&sz=w400-h400`;
  }
  
  return url;
}

// Function to get a random image from the simbologia folder
function getRandomSymbolImage(): string {
  const symbolImages = [
    `${import.meta.env.BASE_URL}simbologia/fogo.png`,
    `${import.meta.env.BASE_URL}simbologia/evangelho.png`,
    `${import.meta.env.BASE_URL}simbologia/pao.png`,
    `${import.meta.env.BASE_URL}simbologia/tenda.png`,
    `${import.meta.env.BASE_URL}simbologia/mochila.png`,
    `${import.meta.env.BASE_URL}simbologia/vara-bifurcada.png`
  ];
  
  // Get a random index
  const randomIndex = Math.floor(Math.random() * symbolImages.length);
  
  // Return the random image path
  return symbolImages[randomIndex];
}

const socialIcons = {
  instagram: "M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z",
  facebook: "M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z"
};

function getSocialIcon(iconName: string) {
  return socialIcons[iconName.toLowerCase() as keyof typeof socialIcons] || "";
}

const socialLinks = [];
if (instagram) socialLinks.push({ name: "Instagram", url: instagram, icon: "instagram" });
if (facebook) socialLinks.push({ name: "Facebook", url: facebook, icon: "facebook" });

const imageUrl = convertGoogleDriveUrl(image);
---
<div class="card w-64 h-72">
  <div class="action-buttons">
    {email && email.trim() !== "" && (
      <a href={`mailto:${email}`} class="action-button mail" title={`Email ${name}`}>
        <svg xmlns="http://www.w3.org/2000/svg" width={24} height={24} viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width={2} stroke-linecap="round" stroke-linejoin="round">
          <rect width={20} height={16} x={2} y={4} rx={2}></rect>
          <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path>
        </svg>
      </a>
    )}
    
    {instagram && (
      <a href={instagram} target="_blank" rel="noopener noreferrer" class="action-button instagram">
        <svg xmlns="http://www.w3.org/2000/svg" width={24} height={24} viewBox="0 0 448 512">
          <path d={socialIcons.instagram}></path>
        </svg>
      </a>
    )}
    
    {facebook && (
      <a href={facebook} target="_blank" rel="noopener noreferrer" class="action-button facebook">
        <svg xmlns="http://www.w3.org/2000/svg" width={24} height={24} viewBox="0 0 448 512">
          <path d={socialIcons.facebook}></path>
        </svg>
      </a>
    )}
    
    {coordinates && (
      <a href={`https://www.google.com/maps/search/?api=1&query=${coordinates.latitude},${coordinates.longitude}`} target="_blank" rel="noopener noreferrer" class="action-button maps">
        <svg xmlns="http://www.w3.org/2000/svg" width={24} height={24} viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width={2} stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 2a8 8 0 0 0-8 8c0 5 8 12 8 12s8-7 8-12a8 8 0 0 0-8-8z"></path>
          <circle cx="12" cy="10" r="3"></circle>
        </svg>
      </a>
    )}
  </div>
  
  <div class="profile-pic">
    <img src={imageUrl} alt={name} class="profile-image" />
  </div>
  
  <div class="bottom">
    <div class="content">
      <span class="name">{name}</span>
      <span class="name">{agrupamento}</span>
      <div class="about-me-container">
        <span class="about-me">{description}</span>
      </div>
    </div>
    <div class="bottom-bottom hover-hide">
      <div class="text-white text-sm font-bold text-fit">
        {name} - {agrupamento}
      </div>
    </div>
  </div>
</div>

<style>
  .card {
    background: white;
    border-radius: 32px;
    padding: 3px;
    position: relative;
    box-shadow: #604b4a30 0px 70px 30px -50px;
    transition: all 0.5s ease-in-out;
  }

  .card .action-buttons {
    position: absolute;
    right: 1rem;
    top: 1.4rem;
    display: flex;
    gap: 0.75rem;
    z-index: 3;
  }

  .card .action-button {
    background: transparent;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .card .action-button svg {
    height: 20px;
    width: 20px;
    stroke: var(--color-primary);
    stroke-width: 2px;
    fill: none;
    transition: all 0.3s ease;
  }

  .card .action-button.instagram svg,
  .card .action-button.facebook svg {
    fill: var(--color-primary);
    stroke: none;
  }

  .card .action-button:hover svg {
    stroke: var(--color-secondary);
    transform: scale(1.2);
  }

  .card .action-button.instagram:hover svg,
  .card .action-button.facebook:hover svg {
    fill: var(--color-secondary);
    stroke: none;
  }

  .card .profile-pic {
    position: absolute;
    width: calc(100% - 6px);
    height: calc(100% - 6px);
    top: 3px;
    left: 3px;
    border-radius: 29px;
    z-index: 1;
    border: 0px solid var(--color-primary);
    overflow: hidden;
    transition: all 0.5s ease-in-out 0.2s, z-index 0.5s ease-in-out 0.2s;
  }

  .card .profile-pic img {
    object-fit: cover;
    width: 100%;
    height: 100%;
    object-position: center center;
    transition: all 0.5s ease-in-out 0s;
  }

  .card .bottom {
    position: absolute;
    bottom: 3px;
    left: 3px;
    right: 3px;
    background: var(--color-primary);
    top: 80%;
    border-radius: 29px;
    z-index: 2;
    box-shadow: rgba(96, 75, 74, 0.1882352941) 0px 5px 5px 0px inset;
    overflow: hidden;
    transition: all 0.5s cubic-bezier(0.645, 0.045, 0.355, 1) 0s;
  }

  .card .bottom .content {
    position: absolute;
    bottom: 0;
    left: 1.5rem;
    right: 1.5rem;
    height: 160px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
  }

  .card .bottom .content .name {
    display: block;
    font-size: 1rem;
    color: white;
    font-weight: bold;
  }

  .card .bottom .content .about-me-container {
    height: 0;
    overflow: hidden;
    transition: height 0.5s ease-in-out;
  }
  
  .card:hover .bottom .content .about-me-container {
    height: auto;
    max-height: 100px;
    overflow-y: auto;
  }
  
  .card .bottom .content .about-me {
    display: block;
    font-size: 0.9rem;
    color: white;
    margin-top: 1rem;
  }

  .card .bottom .bottom-bottom {
    position: absolute;
    bottom: 1rem;
    left: 1.5rem;
    right: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: opacity 0.3s ease;
  }

  /* Text fitting class */
  .text-fit {
    width: 100%;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transform-origin: left center;
  }
  
  /* Apply text scaling using JavaScript */
  .card .bottom .bottom-bottom .scaled-text {
    display: inline-block;
    transform-origin: left center;
  }

  .card:hover {
    border-top-left-radius: 55px;
  }

  .card:hover .bottom {
    top: 20%;
    border-radius: 80px 29px 29px 29px;
    transition: all 0.5s cubic-bezier(0.645, 0.045, 0.355, 1) 0.2s;
  }

  .card:hover .hover-hide {
    opacity: 0;
    pointer-events: none;
  }

  .card:hover .profile-pic {
    width: 100px;
    height: 100px;
    aspect-ratio: 1;
    top: 10px;
    left: 10px;
    border-radius: 50%;
    z-index: 3;
    border: 7px solid var(--color-primary);
    box-shadow: rgba(96, 75, 74, 0.1882352941) 0px 5px 5px 0px;
    transition: all 0.5s ease-in-out, z-index 0.5s ease-in-out 0.1s;
  }

  .card:hover .profile-pic:hover {
    transform: scale(1.3);
    border-radius: 0px;
  }

  .card:hover .profile-pic img {
    transform: scale(1.5);
    object-position: center center;
    transition: all 0.5s ease-in-out 0.5s;
  }
</style>
