---
import Layout from "~/components/Layout.astro";
import ContentSection from "~/components/content-section.astro";
import { DEPARTMENT_GRADIENTS } from "~/types";
import ciclosData from "../../public/ciclos.json" assert { type: "json" };
import CiclosInfo from "~/components/ciclos-info.astro";
import CompatibilityList from "~/components/compatibility-list.astro";
import CicloDropdown from "~/components/CicloDropdown.astro";
import ImageModal from "~/components/ImageModal.astro";
import type { CompatibilityItem } from "~/types";

// Get the first ciclo as default
const defaultCiclo = ciclosData.ciclos[0];

const getImageSrc = (imagePath: string) => {
  return `${import.meta.env.BASE_URL}${imagePath}`;
};

// Function to create compatibility items from ciclo data
const createCompatibilityItems = (ciclo: any): Array<CompatibilityItem> => [
  {
    title: "Carta",
    icon: "book",
    url: ciclo.carta,
  },
  {
    title: "Hino",
    icon: "music",
    url: ciclo.hino,
  },
  {
    title: "Letra",
    icon: "book",
    url: ciclo.letra,
  },
  {
    title: "Fotos",
    icon: "camera",
    url: ciclo.picturesLink,
  },
  {
    title: "Site",
    icon: "computer",
    url: ciclo.site,
  },
];

// Get compatibility items for the default ciclo
const defaultCompatibilityItems = createCompatibilityItems(defaultCiclo);

// Sample aesthetic pictures - replace these with your actual image paths
const leftSidePictures = defaultCiclo.leftSidePictures || [];

const rightSidePictures = defaultCiclo.rightSidePictures || [];
---

<Layout
  title="Ciclos - Cenáculo Núcleo Este"
  description="Conheça os ciclos do Núcleo Este"
>
  <div class="px-4 py-8">
    <ContentSection title="Ciclos Passados" id="ciclos">
      <Fragment slot="lead">
        Tudo sobre os ciclos passados do <span class="text-primary"
          >Cenáculo mais do rock</span
        > do país
      </Fragment>
      
      <div class="flex flex-col lg:flex-row gap-4 mt-8 relative">
        <!-- Left column - Aesthetic Pictures -->
        {leftSidePictures.length > 0 && (
          <div class="hidden lg:flex w-1/6 flex-col gap-4 sticky top-8 h-fit">
            <div class="aesthetic-gallery left-gallery">
              {leftSidePictures.map((pic, index) => (
                <div 
                  class={`aesthetic-frame frame-${index + 1} clickable-frame`}
                  style={`animation-delay: ${index * 0.2}s`}
                  data-image={getImageSrc(pic)}
                  data-title={`Ciclo ${defaultCiclo.number} - Imagem ${index + 1}`}
                >
                  <img 
                    src={getImageSrc(pic)} 
                    alt={`Aesthetic ${index + 1}`}
                    class="aesthetic-image"
                  />
                  <div class="image-overlay"></div>
                </div>
              ))}
            </div>
          </div>
        )}

        <!-- Center column - Main Content -->
        <div class={`w-full ${(leftSidePictures.length > 0 || rightSidePictures.length > 0) ? 'lg:w-2/3' : 'lg:w-full'}`}>
          <!-- Dropdown for ciclo selection -->
          <div class="flex flex-col lg:flex-row gap-4 justify-center items-start">
            <div class="mb-6 flex justify-center w-full lg:w-auto">
              <CicloDropdown
                ciclos={ciclosData.ciclos}
                defaultCiclo={defaultCiclo.number}
              />
            </div>
            <div class="mb-6 flex justify-center w-full lg:w-auto" id="compatibility-container">
              <CompatibilityList
                items={defaultCompatibilityItems}
                title="Documentos"
                url="https://docs.astro.build/core-concepts/framework-components/"
                direction="row"
              />
            </div>
      </div>

          <!-- Ciclo content container -->
          <div id="ciclo-content" class="relative z-10">
            <!-- Content will be populated by JavaScript -->
          </div>
      </div>

        <!-- Right column - Aesthetic Pictures -->
        {rightSidePictures.length > 0 && (
          <div class="hidden lg:flex w-1/6 flex-col gap-4 sticky top-8 h-fit">
            <div class="aesthetic-gallery right-gallery">
              {rightSidePictures.map((pic, index) => (
                <div 
                  class={`aesthetic-frame frame-${index + 1} clickable-frame`}
                  style={`animation-delay: ${(index + 2) * 0.2}s`}
                  data-image={getImageSrc(pic)}
                  data-title={`Ciclo ${defaultCiclo.number} - Imagem ${index + 1}`}
                >
                  <img 
                    src={getImageSrc(pic)} 
                    alt={`Aesthetic ${index + 1}`}
                    class="aesthetic-image"
                  />
                  <div class="image-overlay"></div>
                </div>
                ))}
              </div>
            </div>
        )}
      </div>
    </ContentSection>
  </div>

  <!-- Image Modal -->
  <ImageModal />
</Layout>

<script
  define:vars={{
    ciclosData,
    departmentGradients: DEPARTMENT_GRADIENTS,
    baseUrl: import.meta.env.BASE_URL,
  }}
>
  document.addEventListener("DOMContentLoaded", function () {
    const contentContainer = document.getElementById("ciclo-content");
    const compatibilityContainer = document.getElementById(
      "compatibility-container"
    );

    // Function to fit text within container
    function fitTextToContainer(element) {
      const container = element.parentElement;
      if (!container) return;

      const containerWidth = container.offsetWidth - 20; // Account for padding
      let fontSize = 20; // Start with 20px (1.25rem = text-xl)
      element.style.fontSize = fontSize + "px";

      // Reduce font size until text fits
      while (element.scrollWidth > containerWidth && fontSize > 12) {
        fontSize -= 0.5;
        element.style.fontSize = fontSize + "px";
      }
    }

        // Function to add hover effects
    function addHoverEffects(ciclo) {
        const cards = contentContainer.querySelectorAll(".group");
        cards.forEach((card) => {
            const img = card.querySelector("img");
            if (img) {
                          card.addEventListener("mouseenter", () => {
                 const hoverScale = ciclo.scale * 1.05; // Scale up by 5%
                 img.style.transform = `scale(${hoverScale})`;
                 img.style.filter = "brightness(1.2)";
                 img.style.transition = "transform 0.3s ease-in-out, filter 0.3s ease-in-out";
              });

                          card.addEventListener("mouseleave", () => {
                // Return to original scale from ciclo data
                img.style.transform = `scale(${ciclo.scale})`;
                img.style.filter = "";
                img.style.transition = "transform 0.3s ease-in-out, filter 0.3s ease-in-out";
              });
            }
        });
    }


    // Function to fit all text elements
    function fitAllText() {
      const nameElements = contentContainer.querySelectorAll(".name-text");
      nameElements.forEach((element) => {
        // Reset font size first
        element.style.fontSize = "";
        // Then fit to container
        setTimeout(() => fitTextToContainer(element), 10);
      });
    }

    // Function to update compatibility list
    function updateCompatibilityList(ciclo) {
      const allCompatibilityItems = [
        {
          title: "Carta",
          icon: "book",
          url: ciclo.carta,
        },
        {
          title: "Hino",
          icon: "music",
          url: ciclo.hino,
        },
        {
          title: "Letra",
          icon: "book",
          url: ciclo.letra,
        },
        {
          title: "Fotos",
          icon: "camera",
          url: ciclo.picturesLink,
        },
        {
          title: "Site",
          icon: "computer",
          url: ciclo.site,
        },
      ];

      // Filter out items that don't have valid URLs
      const compatibilityItems = allCompatibilityItems.filter(item => 
        item.url && item.url.trim() !== ""
      );

      // If no items are available, show a message or hide the container
      if (compatibilityItems.length === 0) {
        compatibilityContainer.innerHTML = `
          <div class="w-full max-w-fit space-y-2">
            <div class="relative border border-default rounded-lg bg-default px-6 pb-2 pt-4">
              <h3 class="absolute right-4 top-0 -translate-y-1/2 rounded-full border border-default bg-default px-4 py-1 uppercase tracking-tight text-xs text-primary">
                Documentos
              </h3>
              <p class="text-center text-default py-4">Nenhum documento disponível</p>
            </div>
          </div>
        `;
        return;
      }

      const compatibilityHtml = `
        <div class="w-full max-w-fit space-y-2">
          <div class="relative border border-default rounded-lg bg-default px-6 pb-2 pt-4">
            <h3 class="absolute right-4 top-0 -translate-y-1/2 rounded-full border border-default bg-default px-4 py-1 uppercase tracking-tight text-xs text-primary">
              Documentos
            </h3>
            <ul class="flex flex-row justify-center gap-10">
                             ${compatibilityItems
                               .map(
                                 (item) => `
                 <li>
                   ${
                     item.url
                       ? `
                     <a class="flex flex-col items-center gap-2 text-default hover:text-primary transition-colors" href="${item.url}">
                       ${getIconSvg(item.icon)}
                       <span>${item.title}</span>
                     </a>
                   `
                       : `
                     <div class="flex flex-col items-center gap-2 text-default">
                       ${getIconSvg(item.icon)}
                       <span>${item.title}</span>
                     </div>
                   `
                   }
                 </li>
               `
                               )
                               .join("")}
            </ul>
          </div>
        </div>
      `;

      compatibilityContainer.innerHTML = compatibilityHtml;
    }

    // Function to get SVG content for icons
    function getIconSvg(iconName) {
      const icons = {
        book: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 1 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25" />
        </svg>`,
        music: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8">
          <path stroke-linecap="round" stroke-linejoin="round" d="m9 9 10.5-3m0 6.553v3.75a2.25 2.25 0 0 1-1.632 2.163l-1.32.377a1.803 1.803 0 1 1-.99-3.467l2.31-.66a2.25 2.25 0 0 0 1.632-2.163Zm0 0V2.25L9 5.25v10.303m0 0v3.75a2.25 2.25 0 0 1-1.632 2.163l-1.32.377a1.803 1.803 0 1 1-.99-3.467l2.31-.66A2.25 2.25 0 0 0 9 15.553Z" />
        </svg>`,
        camera: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6.827 6.175A2.31 2.31 0 0 1 5.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 0 0-1.134-.175 2.31 2.31 0 0 1-1.64-1.055l-.822-1.316a2.192 2.192 0 0 0-1.736-1.039 48.774 48.774 0 0 0-5.232 0 2.192 2.192 0 0 0-1.736 1.039l-.821 1.316Z" />
          <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 12.75a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM18.75 10.5h.008v.008h-.008V10.5Z" />
        </svg>`,
        computer: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-8">
          <path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 0 1-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0 1 15 18.257V17.25m6-12V15a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 15V5.25A2.25 2.25 0 0 1 5.25 3h13.5A2.25 2.25 0 0 1 21 5.25Z" />
        </svg>`,
      };
      return icons[iconName] || "";
    }

    function renderCiclo(ciclo) {
      const departmentsHtml = Object.entries(ciclo.ep)
        .filter(([key, departamento]) => departamento.members.length > 0)
        .map(
          ([key, departamento]) => `
          <div class="flex flex-col items-center gap-4 mb-8">
            <span class="text-primary text-2xl  font-bold relative z-30">${departamento.name}</span>
            <div class="flex flex-row flex-wrap justify-center gap-6 w-full">
              ${departamento.members
                .map(
                  (member) => `
                <div class="group relative w-full max-w-[300px] mb-10">
                  ${member.cargo ? `
                  <div class="bg-white rounded-2xl p-3 mt-[-2rem] absolute left-0 right-0 mx-auto w-[80%] text-center shadow-md name-container z-20">
                    <p class="text-sm text-primary mb-1" style="overflow: hidden; text-overflow: ellipsis;">
                      ${member.cargo}
                    </p>
                  </div>
                  ` : ''}

                  <div class="relative overflow-hidden rounded-md aspect-[5/6] bg-gradient-to-br ${departmentGradients[key]} z-10">
                    <img
                        src="${baseUrl}${member.image || 'pics/c_placeholder.png'}"
                        alt="${member.name}"
                        style="transform: scale(${ciclo.scale}); object-position: center ${50 + (ciclo.translateY * 0.3)}%;"
                        class="w-full h-full object-cover transition-transform duration-300 ease-in-out"
                    />
                  </div>
                  <div class="bg-white rounded-2xl p-3 mt-[-2rem] absolute left-0 right-0 mx-auto w-[80%] text-center shadow-md name-container z-20">
                    <h2 class="text-lg font-bold text-gray-900 mb-1 name-text" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                      ${member.name}
                    </h2>
                    <p class="text-xs text-gray-500 mb-1" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                      ${member.agrupamento}
                    </p>
                  </div>
                </div>
              `
                )
                .join("")}
            </div>
          </div>
        `
        )
        .join("");

      const mainImageHtml = ciclo.image && ciclo.image.trim() !== "" ? `
        <div class="aspect-[20/9] w-2/3 overflow-hidden justify-center items-center mx-auto mb-4 relative group">
          <img
              src="${baseUrl}${ciclo.image}"
              alt="${ciclo.number}º Ciclo"
              class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
          />
          <button 
            class="expand-ciclo-image absolute top-2 right-2 bg-white/80 hover:bg-white text-gray-700 hover:text-gray-900 p-2 rounded-full shadow-lg transition-all duration-200 opacity-0 group-hover:opacity-100 z-10"
            data-image="${baseUrl}${ciclo.image}"
            data-title="${ciclo.image_description ? `${ciclo.image_description} do ${ciclo.number}º Ciclo - ${ciclo.lema}` : `EP do ${ciclo.number}º Ciclo - ${ciclo.lema}`}"
            aria-label="Expandir imagem"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"/>
            </svg>
          </button>
        </div>
      ` : '';

      contentContainer.innerHTML = `
        <div class="mb-6">
          <h2 class="text-3xl font-bold mb-4 text-center">
            <span class="text-primary">${ciclo.number}º Ciclo</span>
          </h2>
          <p class="text-lg mb-6 text-center">
            <span class="text-primary">${ciclo.lema}</span> ${ciclo.lema ? ' - ' : ''} ${ciclo.year}
          </p>
          ${mainImageHtml}
        </div>
        <div>
          ${departmentsHtml}
        </div>
      `;

      // Apply text fitting and hover effects after content is rendered
      setTimeout(() => {
        fitAllText();
        addHoverEffects(ciclo);
      }, 50);
    }

    // COMPLETE FIX: Replace your updateSidePictures function with this one
  function updateSidePictures(ciclo) {
    const leftSidePictures = ciclo.leftSidePictures || [];
    const rightSidePictures = ciclo.rightSidePictures || [];
    
    // Update the main container layout based on whether pictures exist
    const mainContainer = document.querySelector('.flex.flex-col.lg\\:flex-row.gap-4');
    const centerColumn = mainContainer?.querySelector('.w-full');
    
    if (centerColumn) {
      // Update center column width based on side pictures availability
      const hasSidePictures = leftSidePictures.length > 0 || rightSidePictures.length > 0;
      centerColumn.className = `w-full ${hasSidePictures ? 'lg:w-2/3' : 'lg:w-full'}`;
    }
    
    // Handle left gallery
    const leftGallery = document.querySelector('.left-gallery');
    const leftGalleryContainer = leftGallery?.closest('div[class*="lg:flex"]');
    
    if (leftSidePictures.length > 0) {
      // Show and update left gallery
      if (leftGalleryContainer) {
        leftGalleryContainer.style.display = '';
        leftGalleryContainer.classList.remove('hidden');
        leftGalleryContainer.classList.add('hidden', 'lg:flex');
      }
      
      if (leftGallery) {
        const leftFrames = leftGallery.querySelectorAll('.aesthetic-frame');
        leftFrames.forEach((frame, index) => {
          const img = frame.querySelector('.aesthetic-image');
          if (img && leftSidePictures[index]) {
            // Reset ALL inline styles first
            img.style.cssText = '';
            
            // Update data attributes for modal
            frame.setAttribute('data-image', baseUrl + leftSidePictures[index].replace('../public/', ''));
            frame.setAttribute('data-title', `Ciclo ${ciclo.number} - Imagem ${index + 1}`);
            
            // Apply fade effect
            img.style.opacity = '0.3';
            img.style.filter = 'blur(2px)';
            img.style.transition = 'all 0.4s ease';
            
            setTimeout(() => {
              img.src = baseUrl + leftSidePictures[index].replace('../public/', '');
              // Reset to original state with only necessary styles
              img.style.cssText = 'width: 100%; height: 150px; object-fit: cover; transition: all 0.4s ease; filter: brightness(0.9) contrast(1.1);';
            }, 200);
          }
        });
      }
    } else {
      // Hide left gallery
      if (leftGalleryContainer) {
        leftGalleryContainer.style.display = 'none';
        leftGalleryContainer.classList.add('hidden');
      }
    }
  
    // Handle right gallery
    const rightGallery = document.querySelector('.right-gallery');
    const rightGalleryContainer = rightGallery?.closest('div[class*="lg:flex"]');
    
    if (rightSidePictures.length > 0) {
      // Show and update right gallery
      if (rightGalleryContainer) {
        rightGalleryContainer.style.display = '';
        rightGalleryContainer.classList.remove('hidden');
        rightGalleryContainer.classList.add('hidden', 'lg:flex');
      }
      
      if (rightGallery) {
        const rightFrames = rightGallery.querySelectorAll('.aesthetic-frame');
        rightFrames.forEach((frame, index) => {
          const img = frame.querySelector('.aesthetic-image');
          if (img && rightSidePictures[index]) {
            // Reset ALL inline styles first
            img.style.cssText = '';
            
            // Update data attributes for modal
            frame.setAttribute('data-image', baseUrl + rightSidePictures[index].replace('../public/', ''));
            frame.setAttribute('data-title', `Ciclo ${ciclo.number} - Imagem ${index + 1}`);
            
            // Apply fade effect
            img.style.opacity = '0.3';
            img.style.filter = 'blur(2px)';
            img.style.transition = 'all 0.4s ease';
            
            setTimeout(() => {
              img.src = baseUrl + rightSidePictures[index].replace('../public/', '');
              // Reset to original state with only necessary styles
              img.style.cssText = 'width: 100%; height: 150px; object-fit: cover; transition: all 0.4s ease; filter: brightness(0.9) contrast(1.1);';
            }, 300 + (index * 50));
          }
        });
      }
    } else {
      // Hide right gallery
      if (rightGalleryContainer) {
        rightGalleryContainer.style.display = 'none';
        rightGalleryContainer.classList.add('hidden');
      }
    }
    
    // Force layout recalculation after updates
    setTimeout(() => {
      if (mainContainer) {
        // Trigger a reflow to ensure layout is recalculated
        mainContainer.style.display = 'flex';
        mainContainer.offsetHeight; // Force reflow
      }
      
      // Re-add click listeners after updating the pictures
      addFrameClickListeners();
      addCicloImageClickListeners();
    }, 600);
  }

    function updateCiclo(cicloNumber) {
      const selectedCiclo = ciclosData.ciclos.find(
        (c) => c.number === cicloNumber
      );
      if (selectedCiclo) {
        renderCiclo(selectedCiclo);
        updateCompatibilityList(selectedCiclo);
        updateSidePictures(selectedCiclo);
      }
    }

    // Initialize with first ciclo
    updateCiclo(ciclosData.ciclos[0].number);

    // Handle dropdown change via custom event
    document.addEventListener("cicloChanged", function (event) {
      updateCiclo(event.detail.cicloNumber);
    });

    // Handle window resize to refit text
    window.addEventListener("resize", () => {
      setTimeout(fitAllText, 100);
    });

    // Initialize aesthetic galleries animations
    function initAestheticGalleries() {
      const galleries = document.querySelectorAll('.aesthetic-gallery');
      
      galleries.forEach((gallery, galleryIndex) => {
        const frames = gallery.querySelectorAll('.aesthetic-frame');
        
        // Stagger the initial animations
        frames.forEach((frame, index) => {
          setTimeout(() => {
            frame.style.opacity = '1';
            frame.style.transform = 'translateY(0) rotate(0deg)';
          }, (galleryIndex * 200) + (index * 150));
        });
      });
    }

    // Initialize galleries after a short delay
    setTimeout(initAestheticGalleries, 300);

    // Add click event listeners to aesthetic frames for modal functionality
    function addFrameClickListeners() {
      const clickableFrames = document.querySelectorAll('.clickable-frame');
      clickableFrames.forEach(frame => {
        frame.addEventListener('click', function() {
          const imageSrc = frame.getAttribute('data-image');
          const title = frame.getAttribute('data-title');
          if (imageSrc && title && window.openImageModal) {
            window.openImageModal(imageSrc, title);
          }
        });
      });
    }

    // Add click event listeners to ciclo image expand buttons
    function addCicloImageClickListeners() {
      const expandButtons = document.querySelectorAll('.expand-ciclo-image');
      expandButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.stopPropagation(); // Prevent any parent click events
          const imageSrc = button.getAttribute('data-image');
          const title = button.getAttribute('data-title');
          if (imageSrc && title && window.openImageModal) {
            window.openImageModal(imageSrc, title);
          }
        });
      });
    }

    // Initialize click listeners
    addFrameClickListeners();
    addCicloImageClickListeners();
  });
</script>

<style>


  img {
    transition: transform 0.3s ease-in-out;
  }
  
  .name-container {
    max-width: 100%;
  }
  
  .name-text {
    display: block;
    text-overflow: ellipsis;
    overflow: hidden;
    max-width: 100%;
    white-space: nowrap;
    font-size: 0.875rem;
  }
  
  .name-text:not(.truncated) {
    font-size: clamp(0.7rem, 4vw, 0.875rem);
  }

  /* Aesthetic Gallery Styles */
  .aesthetic-gallery {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 1rem 0;
    width: 100%;
    min-height: 400px; /* Ensure minimum height */
    contain: layout; /* Prevent layout shifts */
  }

  .aesthetic-frame {
    position: relative;
    opacity: 0;
    transform: translateY(20px) rotate(-2deg);
    transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }

  /* Removed - will be handled by clickable-frame:hover */

  .aesthetic-image {
    width: 100% !important;
    height: 150px !important;
    object-fit: cover !important;
    display: block;
    flex-shrink: 0;
    transition: all 0.4s ease;
    filter: brightness(0.9) contrast(1.1);
  }

  .aesthetic-frame:hover .aesthetic-image {
    filter: brightness(1) contrast(1.2);
    transform-origin: center center;
    will-change: transform;
  }

  .flex.flex-col.lg\\:flex-row.gap-4 {
    align-items: flex-start;
    width: 100%;
  }

  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, 
      rgba(var(--primary-rgb, 59, 130, 246), 0.1), 
      rgba(var(--primary-rgb, 59, 130, 246), 0.05)
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .aesthetic-frame:hover .image-overlay {
    opacity: 1;
  }

  /* Unique positioning for each frame */
  .left-gallery .frame-1 {
    transform: translateY(20px) rotate(-3deg);
    margin-left: 10px;
  }

  .left-gallery .frame-2 {
    transform: translateY(20px) rotate(2deg);
    margin-right: 15px;
  }

  .left-gallery .frame-3 {
    transform: translateY(20px) rotate(-1deg);
    margin-left: 5px;
  }

  .left-gallery .frame-4 {
    transform: translateY(20px) rotate(3deg);
    margin-right: 10px;
  }

  .right-gallery .frame-1 {
    transform: translateY(20px) rotate(2deg);
    margin-right: 10px;
  }

  .right-gallery .frame-2 {
    transform: translateY(20px) rotate(-3deg);
    margin-left: 15px;
  }

  .right-gallery .frame-3 {
    transform: translateY(20px) rotate(1deg);
    margin-right: 5px;
  }

  .right-gallery .frame-4 {
    transform: translateY(20px) rotate(-2deg);
    margin-left: 10px;
  }

  /* Responsive adjustments */
  @media (max-width: 1024px) {
    .aesthetic-gallery {
      display: none;
    }
  }

  /* Floating animation for subtle movement - disabled on hover */
  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(var(--rotation, 0deg)); }
    50% { transform: translateY(-10px) rotate(var(--rotation, 0deg)); }
  }

  .aesthetic-frame:nth-child(odd):not(:hover) {
    animation: float 6s ease-in-out infinite;
    animation-delay: var(--delay, 0s);
  }

  .aesthetic-frame:nth-child(even):not(:hover) {
    animation: float 8s ease-in-out infinite reverse;
    animation-delay: var(--delay, 0s);
  }

  @container (max-width: 1024px) {
    .aesthetic-gallery {
      display: none;
    }
  }

  /* Add some CSS custom properties for the rotations */
  .left-gallery .frame-1 { --rotation: -3deg; --delay: 0s; }
  .left-gallery .frame-2 { --rotation: 2deg; --delay: 1s; }
  .left-gallery .frame-3 { --rotation: -1deg; --delay: 2s; }
  .left-gallery .frame-4 { --rotation: 3deg; --delay: 3s; }

  .right-gallery .frame-1 { --rotation: 2deg; --delay: 0.5s; }
  .right-gallery .frame-2 { --rotation: -3deg; --delay: 1.5s; }
  .right-gallery .frame-3 { --rotation: 1deg; --delay: 2.5s; }
  .right-gallery .frame-4 { --rotation: -2deg; --delay: 3.5s; }

  /* Clickable frame styles */
  .clickable-frame {
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .clickable-frame:hover {
    transform: translateY(-8px) rotate(0deg) scale(1.08) !important;
    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.2) !important;
    z-index: 10;
    animation: none !important; /* Disable floating animation on hover */
  }

  .clickable-frame:active {
    transform: translateY(-5px) rotate(0deg) scale(1.05) !important;
    animation: none !important;
  }

</style>